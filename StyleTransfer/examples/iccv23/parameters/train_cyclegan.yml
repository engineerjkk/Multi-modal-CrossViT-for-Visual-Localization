network:
  type: NetworkSet
  generator_X:
    type: SingleNetwork
    model:
      architecture: official_resnet_generator
      no_antialias: true
      no_antialias_up: true
      input_nc: 3
      output_nc: 3
      n_blocks: 9
      norm_layer: instance
    initialize:
      weights: normal_p2p
      seed: 0
    runtime:
      wrappers: ""
      data:
        transforms: pil2np | totensor | normalize
        mean_std: [[0.5, 0.5, 0.5], [0.5, 0.5, 0.5]]
  generator_Y:
    type: SingleNetwork
    model:
      architecture: official_resnet_generator
      no_antialias: true
      no_antialias_up: true
      input_nc: 3
      output_nc: 3
      n_blocks: 9
      norm_layer: instance
    initialize:
      weights: normal_p2p
      seed: 0
    runtime:
      wrappers: ""
      data:
        transforms: pil2np | totensor | normalize
        mean_std: [[0.5, 0.5, 0.5], [0.5, 0.5, 0.5]]
  discriminator_X:
    type: SingleNetwork
    model:
      architecture: official_p2p_discriminator
      no_antialias: true
      input_nc: 3
      norm_layer: instance
    initialize:
      weights: normal_p2p
      seed: 0
    runtime:
      wrappers: ""
      data: {}
  discriminator_Y:
    type: SingleNetwork
    model:
      architecture: official_p2p_discriminator
      no_antialias: true
      input_nc: 3
      norm_layer: instance
    initialize:
      weights: normal_p2p
      seed: 0
    runtime:
      wrappers: ""
      data: {}
learning:
  type: TrainValLearning
  checkpoints:
    directory: experiments/gan/${SCENARIO_NAME}
    store_every: 10
    checkpoint_every: 2
    directory_epoch_regex: null
  training:
    type: EpochTraining
    epochs: 100
    seed: 0
    deterministic: false
    criterion:
      loss: cycle_loss
      loss_G_X:
        loss: multihead_loss
        weights:
          adversarial: 1
          cycle: 10
        normalize_weights: false
        adversarial:
          loss: mse
        cycle:
          loss: l1
      loss_G_Y:
        loss: multihead_loss
        weights:
          adversarial: 1
          cycle: 10
        normalize_weights: false
        adversarial:
          loss: mse
        cycle:
          loss: l1
      loss_D_X:
        loss: discriminator_loss
        criterion:
          loss: mse
      loss_D_Y:
        loss: discriminator_loss
        criterion:
          loss: mse
    optimizer:
      composition:
        type: alternation
        order: generator_X,generator_Y,discriminator_X,discriminator_Y
        alternate_iteration: 1
      generator_X:
        algorithm: adam
        lr: 2.e-4
        beta1: 0.5
        beta2: 0.999
        weight_decay: 0
      generator_Y:
        algorithm: adam
        lr: 2.e-4
        beta1: 0.5
        beta2: 0.999
        weight_decay: 0
      discriminator_X:
        algorithm: adam
        lr: 2.e-4
        beta1: 0.5
        beta2: 0.999
        weight_decay: 0
      discriminator_Y:
        algorithm: adam
        lr: 2.e-4
        beta1: 0.5
        beta2: 0.999
        weight_decay: 0
    scheduler:
      composition:
        type: set
      generator_X:
        algorithm: lambda_p2p
        n_epochs_decay: 50
      generator_Y:
        algorithm: lambda_p2p
        n_epochs_decay: 50
      discriminator_X:
        algorithm: lambda_p2p
        n_epochs_decay: 50
      discriminator_Y:
        algorithm: lambda_p2p
        n_epochs_decay: 50
    epoch_iteration:
      type: SupervisedCycleGanEpoch
      data: train
      criterion: default
      pool_size: 50
  validation:
    __template__: _gan_eval.yml
output:
  learning:
    progress:
      print_each: 100
      print_each_val: 1000
    htmlreport: {}
data:
  __template__: _gan_data.yml
